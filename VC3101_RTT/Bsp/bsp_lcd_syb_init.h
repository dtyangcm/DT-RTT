#ifndef _LCD_INIT_H_	
#define _LCD_INIT_H_

#ifdef __cplusplus		   //定义对CPP进行C处理 //开始部分
extern "C" {
#endif

/*
以下为LCM的驱动层,主要负责发送T6963C的各种命令,提供设置显示地址等功能  
在发送命令前会检测其状态字  
带参数命令的发送模式:   先参数->后命令;  
            操作模式:   先命令->后参数;   
T6963C命令的定义 
	
********************************************************************/   
//指针设置指令    
#define LCD_CUR_POS 0X21    //光标位置设置(只有设置到有效显示地址并打开显示才看到),双参数(D1水平位置,D2垂直位置)    
#define LCD_CGR_POS 0X22    //CGRAM偏置地址设置(用来增加自己的符号),双参数(D1低5位有效,D2=00)    
#define LCD_ADR_POS 0x24    //地址指针位置(设置读写操作打针)    

//显示区域设置指令    
#define LCD_TXT_STP 0X40    //文本区首址(从此地址开始向屏幕左上角显示字符)    
#define LCD_TXT_WID 0X41    //文本区宽度(设置显示宽度,N/6式N/8,其中N为X轴的点数)    
#define LCD_GRH_STP 0X42    //图型区首址(从此地址开始向屏幕左上角显示点,((有等进一步确认))为文本方式显示时,显示为文本显示特性    
#define LCD_GRH_WID 0X43    //图形区宽度(设置显示宽度,N/6式N/8,其中N为X轴的点数)    

//显示方式设置指令,当CG(D3)为0启用CGROM    
#define LCD_MOD_OR  0X80    //显示方式:逻辑或    
#define LCD_MOD_XOR 0X81    //显示方式:逻辑异或    
#define LCD_MOD_AND 0x83    //显示方式:逻辑与    
#define LCD_MOD_TCH 0x84    //显示方式:文本    

//显示开关设置指令,(D0,D1,D2,D3)=1/0  ==========>  (光标闪烁,光标显示,文本显示,图形显示)启用/禁用    
#define LCD_DIS_SW  0x90    //显示开关设置
#define LCD_DIS_OFF	0x90	//关显示
#define LCD_DIS_GON	0x98	//开图形
#define LCD_DIS_TON	0x94	//开文本    

//光标开头设置指令    
#define LCD_CUR_SHP 0xA0    //光标型形状选择:0xA0-0xA7代表光标占的行数    

//自动读写设置指令    
#define LCD_AUT_WR  0xB0    //自动写设置    
#define LCD_AUT_RD  0xB1    //自动读设置    
#define LCD_AUT_OVR 0xB2    //自动读写结束    

//数据一次读写设置指令    
#define LCD_INC_WR  0xC0    //数据一次写,地址加1    
#define LCD_INC_RD  0xC1    //数据一次读,地址加1    
#define LCD_DEC_WR  0xC2    //数据一次写,地址减1    
#define LCD_DEC_RD  0xC3    //数据一次读,地址减1    
#define LCD_ZER_WR  0xc4    //数据一次写,地址不变    
#define LCE_ZER_RD  0xc5    //数据一次读,地址不变    

//屏读设置指令    
#define LCD_SCN_RD  0xE0    //屏读,屏读只能在图形显示区内;该指令是把屏上的内容取出来作为数据使用.    

//屏拷贝    
#define LCD_SCN_CP  0xE8    //屏拷贝,该指令将屏上当前地址指针(图形)处开妈的一行合成显示内容拷贝到相对应的图形显示区的一级单元    

//位操作指令    
#define LCD_BIT_OP  0xF0    //该指令可将显示缓冲区单无的某位清零或置位.D0-D1---定义D0-D7位;D3--1为置位,D3--0为复位  

#include "stm32f4xx.h"

/****************************************************************************
* 名	称：u8 LCD_init(void)
* 功	能：引脚初始化
* 入口参数：无
* 出口参数：u8	初始化是否成功			1成功	0失败
* 说	明：无背光则有可能初始化未通过	
****************************************************************************/
u8 LCD_init(void);

/****************************************************************************
* 名	称：	u8 SetAddr(u16 offset)
* 功	能：	图形显示区首地址偏移量
* 入口参数：u16 offset			//偏移地址
* 出口参数：u8		是否执行成功		1成功	0失败
* 说	明：	无
****************************************************************************/
u8 SetAddr(u16 offset);

/****************************************************************************
* 名	称：	u8 ClearScreen(void)
* 功	能：	清屏
* 入口参数：无
* 出口参数：u8 清屏是否成功		1成功 0失败
* 说	明：	无
****************************************************************************/
u8 ClearScreen(void);

/****************************************************************************
* 名	称：	u8 LCD_WriteCommand(u8 nCmd)
* 功	能：	写LCD命令
* 入口参数：u8	nCmd 		命令
* 出口参数：u8	发送命令是否成功			1成功	0失败
* 说	明：	失败为忙状态
****************************************************************************/
u8 LCD_WriteCommand(u8 nCmd);

/****************************************************************************
* 名	称：	u8 LCD_WriteData(u8 nData)
* 功	能：	写LCD命令
* 入口参数：u8	nData		数据
* 出口参数：u8	发送命令是否成功			1成功	0失败
* 说	明：	失败为忙状态
****************************************************************************/
u8 LCD_WriteData(u8 nData);
	
#ifdef __cplusplus		   				//定义对CPP进行C处理 //结束部分
	
}
#endif

#endif

/*
	#include "GDI.h"

	BeginPaint();
	DrawGbText("重庆沙坪坝区", 36, 90);
	DrawGbText("清华同方经济法", 64, 110);
*/
