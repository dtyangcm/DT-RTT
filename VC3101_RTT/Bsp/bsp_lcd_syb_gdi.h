#ifndef _GDI_H_
#define _GDI_H_

#ifdef __cplusplus		   //定义对CPP进行C处理 //开始部分
extern "C" {
#endif
	
#include "bsp_lcd_syb_init.h"
#include "stm32f4xx.h"

#ifdef LCD_DEBUG
int LCD_Debug(void);
#endif
	
/****************************************************************************
* 名	称：void BeginPaint(void)
* 功	能：GUI初始化函数，包括对LCD的初始化
* 入口参数：无
* 出口参数：无
* 说	明：要使用LCD前必须调用该函数一次
****************************************************************************/	
void BeginPaint(void);

/****************************************************************************
* 名	称：void EraseScreen(void)
* 功	能：清屏及MCU上的显存
* 入口参数：无
* 出口参数：无
* 说	明：
****************************************************************************/	
void EraseScreen(void);

/****************************************************************************
* 名	称：void EraseBuffer(void)
* 功	能：清MCU显存
* 入口参数：无
* 出口参数：无
* 说	明：
****************************************************************************/	
void EraseBuffer(void);

/****************************************************************************
* 名	称：void EraseRect(s16 x, s16 y, s16 cx, s16 cy)
* 功	能：清MCU上选定区域的显存
* 入口参数：s16 x			清除区域的x轴起始位置
						s16 y			清除区域的y轴起始位置
						s16 cx		清除x轴的长度
						s16 cy		清除y轴的长度
* 出口参数：无
* 说	明：
****************************************************************************/
void EraseRect(s16 x, s16 y, s16 cx, s16 cy);

/****************************************************************************
* 名	称：SetRedraw(u8 bEnable)
* 功	能：设置图形重绘，是否允许重新刷屏
* 入口参数：u8 bEnable	LCD是否重新刷屏:0 不刷新次数加1	；1	不刷新次数减1
* 出口参数：无
* 说	明：
****************************************************************************/	
void SetRedraw(u8 bEnable);

/****************************************************************************
* 名	称：void EnableScreenFlush(u8 bEnable)
* 功	能：刷新MCU显存开关函数
* 入口参数：u8 bEnable	
* 出口参数：无
* 说	明：输入参数1:FALSE		禁止刷新MCU显存
										TRUE		允许刷新MCU显存
****************************************************************************/	
void EnableScreenFlush(u8 bEnable);

/****************************************************************************
* 名	称：void EnableGdiView(u8 bEnable)
* 功	能：绘图开关函数
* 入口参数：u8 bEnable	
* 出口参数：无
* 说	明：输入参数1:FALSE		禁止绘图
										TRUE		允许绘图
****************************************************************************/	
void EnableGdiView(u8 bEnable);

/****************************************************************************
* 名	称：SetGdiView(s16 x, s16 y, s16 cx, s16 cy)
* 功	能：设置绘制图形的大小
* 入口参数：s16 x		行起始位置(0~240)
						s16 y		列起始位置(0~128)
						s16 cx 	行绘制长度
						s16 cy	列绘制长度
* 出口参数：无
* 说	明：
****************************************************************************/	
void SetGdiView(s16 x, s16 y, s16 cx, s16 cy);


/****************************************************************************
* 名	称：void FlushScreen(void)
* 功	能：刷新整个屏幕
* 入口参数：无
* 出口参数：无
* 说	明：将MCU显存的内容刷新到LCD的显存中，如果要显示需要在该函数后面添加函数 SetRedraw(TRUE);
****************************************************************************/	
void FlushScreen(void);

/****************************************************************************
* 名	称：void FlushRect(void)
* 功	能：刷新选定区域屏幕
* 入口参数：s16 x		选定区域的x轴起始位置
						s16 y		选定区域的y轴起始位置
						s16 cx	x轴的长度
						s16 cy	y轴的长度
* 出口参数：无
* 说	明：将MCU选定区域的显存的内容刷新到LCD的显存中，如果要显示需要在该函数后面添加函数 SetRedraw(TRUE);
****************************************************************************/	
void FlushRect(s16 x, s16 y, s16 cx, s16 cy); 

/****************************************************************************
* 名	称：void SetColor(u32 nColor)
* 功	能：设置颜色
* 入口参数：u32 nColor	（0-白底黑字	；1-黑底白字）
* 出口参数：无
* 说	明：
****************************************************************************/	
void SetColor(u32 nColor);

/****************************************************************************
* 名	称：void InvertColor(void)
* 功	能：反转颜色
* 入口参数：无
* 出口参数：无
* 说	明：
****************************************************************************/	
void InvertColor(void);

/****************************************************************************
* 名	称：FillRect(s16 x, s16 y, s16 cx, s16 cy)
* 功	能：画实心矩形
* 入口参数：s16 x		矩形的x轴起始位置
						s16 y		矩形的y轴起始位置
						s16 cx	矩形的x轴长度
						s16 cy	矩形的y轴长度
* 出口参数：无
* 说	明：
****************************************************************************/
void FillRect(s16 x, s16 y, s16 cx, s16 cy);		//x:[0,127]		y:[0,63]

/****************************************************************************
* 名	称：void DrawPoint(s16 x, s16 y)
* 功	能：画点函数
* 入口参数：s16	x	点的x轴坐标
						s16	y 点的y轴坐标
* 出口参数：无
* 说	明：
****************************************************************************/	
void DrawPoint(s16 x, s16 y);

/****************************************************************************
* 名	称：void DrawHoriLine(s16 x, s16 y, s16 cx)
* 功	能：画一条横线
* 入口参数：s16 x		横线的X轴起始位置
						s16 y		横线的Y轴起始位置
						s16 cy	横线的X轴长度
* 出口参数：无
* 说	明：
****************************************************************************/	
void DrawHoriLine(s16 x, s16 y, s16 cx);

/****************************************************************************
* 名	称：void DrawVertLine(s16 x, s16 y, s16 cy)
* 功	能：画一条竖线
* 入口参数：s16 x		竖线的X轴起始位置
						s16 y		竖线的Y轴起始位置
						s16	cy	竖线的Y轴长度
* 出口参数：无
* 说	明：
****************************************************************************/	
void DrawVertLine(s16 x, s16 y, s16 cy);

/****************************************************************************
* 名	称：void DrawRect(s16 x, s16 y, s16 cx, s16 cy)
* 功	能：画矩形
* 入口参数：s16	x		矩形的X轴起始位置
						s16	y		矩形的Y轴起始位置
						s16	cx	矩形的x轴长度
						s16	cy	矩形的Y轴长度
* 出口参数：无
* 说	明：
****************************************************************************/	
void DrawRect(s16 x, s16 y, s16 cx, s16 cy);

/****************************************************************************
* 名	称：DrawImage(u8* pImage, s16 x, s16 y, s16 cx, s16 cy)
* 功	能：设置绘制图形的大小1
* 入口参数：u8* pImage 要显示的图像的地址
						s16 x		行起始位置(0~240)
						s16 y		列起始位置(0~128)
						s16 cx 	行长度
						s16 cy	列长度
* 出口参数：无
* 说	明：
****************************************************************************/	
void DrawImage(const u8* pImage, s16 x, s16 y, s16 cx, s16 cy);

/****************************************************************************
* 名	称：SupperDrawImage(u8* pImage, s16 _x, s16 _y, s16 _xImg, s16 _yImg, s16 _cxImg, s16 _cyImg, s16 _Width, s16 _Height)
* 功	能：设置绘制图形的大小2
* 入口参数：u8* pImage 要显示的图像的地址
						s16 _x		屏幕上行起始位置(0~240)
						s16 _y		屏幕上列起始位置(0~128)
						s16 _xImg	绘制图像上的行起点
						s16 _yImg	绘制图像上的列起点
						s16 _cxImg	绘制图像上的区域
						s16 _cyImg	绘制图像上的区域
						
						s16 _Width 	图像的宽度
						s16 _Height	图像的长度
* 出口参数：无
* 说	明：
****************************************************************************/	
void SupperDrawImage(const u8* pImage, s16 _x, s16 _y, s16 _xImg, s16 _yImg, s16 _cxImg, s16 _cyImg, s16 _Width, s16 _Height);


/****************************************************************************
* 名	称：void DrawBigChar(char c, s16 x, s16 y)
* 功	能：绘制大字符(15*30)(目前支持的字符有"0～9";".";"-";"t")
* 入口参数：char  c		要绘制的字符
						s16 x		行起始位置(0~240)
						s16 y		列起始位置(0~128)
* 出口参数：无
* 说	明：
****************************************************************************/	
 void DrawBigChar(char c, s16 x, s16 y);


/****************************************************************************
* 名	称： void DrawBigText(char *sNum, s16 x, s16 y)
* 功	能：绘制大字符串(15*30)(目前支持的字符有"0～9";".";"-";"t")
* 入口参数：char *s		要绘制的字符串
						s16 x		行起始位置(0~240)
						s16 y		列起始位置(0~128)
* 出口参数：无
* 说	明：
****************************************************************************/	
 void DrawBigText(char *sNum, s16 x, s16 y);
 
/****************************************************************************
* 名	称：DrawGbText(char *s, s16 x, s16 y)
* 功	能：绘制字符和汉字
* 入口参数：char *s		要绘制的字符串
						s16 x		行起始位置(0~240)
						s16 y		列起始位置(0~128)
* 出口参数：无
* 说	明：
****************************************************************************/	
void DrawGbText(char *s, s16 x, s16 y);

#endif













